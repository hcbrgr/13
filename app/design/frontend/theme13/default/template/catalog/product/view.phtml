<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2017 X.commerce, Inc. and affiliates (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<script type="text/javascript">
        var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
    </script>
<div class="page13 product">

    <div class="product__back">
    <a class="product__back-link" href="/"><img src="<?php echo $this->getSkinUrl('images/previous_icon.svg') ?>" /> Retour</a>
    </div>
    <?php echo $this->getChildHtml('media') ?>

    <div class="product__infos">
    <div class="product__infos-details">
        <h1 class="product__infos-title title"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
        <p class="product__infos-ref"> <?php
        $categories = $_product->getCategoryCollection()
        ->addAttributeToSelect('name')
        ->addUrlRewriteToResult(); ?>
        </p>
        <span class="product__infos-price"> <?php echo $this->getPriceHtml($_product); ?> </span>
        <span class="product__infos-price-tax">TTC</span>
        <p class="product__infos-description text">
        <?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?>
        
        </p>
        <a class="product__infos-description-more">Plus de d√©tails +</a>
    </div>
    <form action="<?php echo $this->getSubmitUrl($_product, array('_secure' => $this->_isSecure())) ?>" method="post" class="product__infos-options" id="product_addtocart_form">
  
    <select name="color">
            <option value="" disabled selected>Choix de la couleur</option>
            <option value="Rouge">Rouge</option>
            <option value="Bleue">Bleue</option>
        </select>
        <select name="size">
            <option value="" disabled selected>Choix de la taille</option>
            <option value="S">S</option>
            <option value="M">M</option>
            <option value="L">L</option>
        </select>
        <input class="" type="submit" value="Ajouter au Panier" onclick="productAddToCartForm.submit(this)">
    </form>
    </div>
    <script type="text/javascript">
    //<![CDATA[
        var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);
    //]]>
    </script>
</div>


